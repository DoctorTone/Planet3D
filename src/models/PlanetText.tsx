/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef } from "react";
import * as THREE from "three";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { SCENE } from "../state/Config";

type GLTFResult = GLTF & {
  nodes: {
    Planet_3D: THREE.Mesh;
  };
  materials: {};
};

export function PlanetText(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("./models/planet_text.glb") as GLTFResult;
  const groupRef = useRef();

  useFrame((_, delta) => {
    groupRef.current.rotation.y += delta * SCENE.ROTATION_SPEED;
  });

  return (
    <group ref={groupRef} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Planet_3D.geometry}
        position={[-1.9, 0.35, 4]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <meshStandardMaterial color={"orange"} />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/planet_text.glb");
